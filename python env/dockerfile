# prabakar2610/setenv:v1

FROM databricksruntime/standard:latest
ARG UC_PIP_INDEX
RUN apt-get -y update && apt-get install -y --no-install-recommends \
         curl \
         libgomp1 \
         libtool \
         autotools-dev \
         automake \
         build-essential \
         autoconf \
         pkg-config \
         git \
    && rm -rf /var/lib/apt/lists/*
RUN curl -L https://github.com/libspatialindex/libspatialindex/archive/1.8.5.tar.gz | tar xz \
    && cd libspatialindex-1.8.5/ \
    && ./autogen.sh \
    && ./configure \
    && make \
    && make install \
    && ldconfig \
    && cd ..
RUN git clone https://github.com/openvenues/libpostal \
    && cd libpostal \
    && ./bootstrap.sh \
    && mkdir libpostal_data \
    && ./configure --datadir=$PWD/libpostal_data \
    && make \
    && make install \
    && ldconfig \
    && cd ..
#COPY ./requirements.txt /tmp
WORKDIR /tmp
#RUN /databricks/conda/envs/dcs-minimal/bin/pip3 install -r requirements.txt --extra-index-url ${UC_PIP_INDEX}
# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard
# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE
# keeps Python from writing the .pyc files which are unnecessary in this case. We also update
# PATH so that the train and serve programs are found when the container is invoked.
ENV PYTHONIOENCODING=utf-8
ENV PYTHONUNBUFFERED=TRUE
ENV PYTHONDONTWRITEBYTECODE=TRUE
ENV PATH="/opt/program:${PATH}"
ENV PYTHONPATH="/opt/program:${PYTHONPATH}"
# Set up the program in the image
#COPY ./src/training /opt/program/src/training
#COPY ./src/common /opt/program/src/common